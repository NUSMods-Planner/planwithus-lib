{
  "stats": {
    "suites": 10,
    "tests": 48,
    "passes": 48,
    "pending": 0,
    "failures": 0,
    "start": "2021-07-29T07:41:21.505Z",
    "end": "2021-07-29T07:41:21.796Z",
    "duration": 291,
    "testsRegistered": 48,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c5a9dd97-0b14-434f-9d6d-9cecd72f5c3c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc5bbfd2-0157-4945-ae05-3538ac7e75f9",
          "title": "initDirectories",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/block/schemas.test.ts",
          "file": "/src/block/schemas.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should parse all blocks with no errors",
              "fullTitle": "initDirectories should parse all blocks with no errors",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_1.initDirectories.should.not.throw()",
              "err": {},
              "uuid": "0c6809ac-8764-4455-830d-73cd95cd8917",
              "parentUUID": "dc5bbfd2-0157-4945-ae05-3538ac7e75f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should produce primary, second & minor directories",
              "fullTitle": "initDirectories should produce primary, second & minor directories",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const directories = _1.initDirectories();\ndirectories.should.have.property(\"primary\");\ndirectories.should.have.property(\"second\");\ndirectories.should.have.property(\"minor\");",
              "err": {},
              "uuid": "8f9c385d-1400-48cc-8189-0d882cca1178",
              "parentUUID": "dc5bbfd2-0157-4945-ae05-3538ac7e75f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c6809ac-8764-4455-830d-73cd95cd8917",
            "8f9c385d-1400-48cc-8189-0d882cca1178"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b7c90c7b-54b9-4616-bd29-a534718b255c",
          "title": "blockSchema",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/block/schemas.test.ts",
          "file": "/src/block/schemas.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate valid block",
              "fullTitle": "blockSchema should validate valid block",
              "timedOut": false,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"block sample 0\",\n    \"value\": {\n      \"ay\": 1952,\n      \"assign\": [\n        \"'\",\n        \" W\"\n      ],\n      \"match\": [],\n      \"satisfy\": [\n        {\n          \"and\": [\n            {\n              \"mc\": \">=102\"\n            }\n          ]\n        },\n        {\n          \"mc\": \">=162\"\n        },\n        {\n          \"mc\": \"<=18\"\n        },\n        {\n          \"mc\": \"<=38\"\n        },\n        \"\"\n      ],\n      \"url\": \"http://4ubtuib679xesc.xhuee/C8M/%F1%A9%87%ADVrgN!k@Y/&(YKE%F3%AA%98%B2/J!eDT;6/Bp11S;r/cs3c)H_p%E8%BF%A8o/Tpd\",\n      \"info\": \"+ \",\n      \"isSelectable\": true,\n      \"][e#PE\": {\n        \"name\": \"C|S&K#v|\",\n        \"ay\": 2024,\n        \"assign\": [],\n        \"match\": {\n          \"pattern\": \"OBQ408\",\n          \"info\": \"(vx\"\n        },\n        \"satisfy\": [\n          {\n            \"mc\": \"<=128\"\n          },\n          {\n            \"and\": [\n              \"!v&lmN?|\\\\n\",\n              \"&}#6#}/\"\n            ]\n          },\n          \"\",\n          {\n            \"or\": [\n              \"l'~UkG0ey\",\n              {\n                \"and\": [\n                  {\n                    \"mc\": \">=91\"\n                  },\n                  {\n                    \"mc\": \">=134\"\n                  }\n                ]\n              },\n              {\n                \"and\": []\n              },\n              {\n                \"or\": []\n              }\n            ]\n          },\n          {\n            \"mc\": \">=25\"\n          }\n        ],\n        \"isSelectable\": true\n      },\n      \"Z_\": {\n        \"ay\": 1950,\n        \"assign\": [\n          \"\"\n        ],\n        \"match\": {\n          \"or\": [\n            {\n              \"pattern\": \"IV411x\",\n              \"exclude\": \"OHH2\",\n              \"info\": \"Xn0JiYw\"\n            },\n            {\n              \"and\": [\n                \"YVJ061A\",\n                {\n                  \"and\": [\n                    \"RHx9\",\n                    \"LWE7702\",\n                    \"DY0F\",\n                    {\n                      \"pattern\": \"FDK2A\",\n                      \"exclude\": \"PNM42*U\",\n                      \"info\": \"!i7`{MG*\"\n                    }\n                  ]\n                },\n                {\n                  \"pattern\": \"BQY54\",\n                  \"exclude\": \"DB64B\",\n                  \"info\": \"d|}:e\"\n                }\n              ]\n            },\n            {\n              \"and\": []\n            }\n          ]\n        },\n        \"satisfy\": [\n          {\n            \"and\": [\n              {\n                \"mc\": \">=3\"\n              }\n            ]\n          },\n          {\n            \"and\": [\n              \"\",\n              {\n                \"or\": [\n                  \"l=\",\n                  {\n                    \"and\": [\n                      \"7<.\",\n                      \"7@sPWilp Q\",\n                      \"\"\n                    ]\n                  },\n                  {\n                    \"or\": [\n                      \"(\\\\\"\n                    ]\n                  },\n                  \"Jb7y?\",\n                  {\n                    \"or\": [\n                      {\n                        \"or\": []\n                      },\n                      \"nv\"\n                    ]\n                  }\n                ]\n              },\n              {\n                \"or\": [\n                  \"WM\",\n                  \"$^yv`-vQ*x\"\n                ]\n              },\n              {\n                \"mc\": \"<=156\"\n              },\n              {\n                \"or\": [\n                  \"\",\n                  {\n                    \"and\": [\n                      {\n                        \"and\": [\n                          {\n                            \"and\": []\n                          },\n                          \"|\",\n                          {\n                            \"and\": [\n                              \"UQ\",\n                              \"8J\",\n                              \"e{|#*Sd@zt\",\n                              \"(a\"\n                            ]\n                          },\n                          {\n                            \"mc\": \"<=158\"\n                          }\n                        ]\n                      }\n                    ]\n                  },\n                  {\n                    \"and\": []\n                  },\n                  \"\",\n                  {\n                    \"and\": [\n                      \"iAo\",\n                      \"WH\\\\xjk~l\",\n                      \"*vEzXaS&=\",\n                      \"q^)d\",\n                      {\n                        \"and\": [\n                          \"9'\",\n                          {\n                            \"mc\": \"<=107\"\n                          },\n                          \"~s$1\",\n                          \"<Fwk<=`K2~\"\n                        ]\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        \"url\": \"https://jnp8ycp8uy8evbovk70m3.ahnxqkl/kUdWVhmPN\"\n      },\n      \"x:4\": {\n        \"name\": \"JU#8iv\",\n        \"assign\": \"@|%|%&&o\",\n        \"satisfy\": {\n          \"mc\": \"<=7\"\n        },\n        \"info\": \"{|QK:Y@A\",\n        \"isSelectable\": true,\n        \"'rP]-a\": {\n          \"name\": \"%[w!\\\"|\",\n          \"ay\": 1954,\n          \"assign\": [\n            \"z[$\",\n            \"\\\\um;cP|O;!\"\n          ],\n          \"satisfy\": [\n            {\n              \"and\": []\n            },\n            {\n              \"mc\": \"<=87\"\n            }\n          ],\n          \"url\": \"https://vpbw4ba0vrvr5g1renty273p619zvxz1csapmcflc-oje4cba9su.1uw75d.tnnqw-a14dme2ogkyx4b98type.h.zr673irz2-87kv6-bm8tqmwotti91qho93vz7g2cdh-bc42bcr7dxhqlago7.moufrir/4BJqlj/%F2%83%AD%9Bl/Mqr1Z1V/O%F1%99%82%95F7tCW6nH/X%F1%82%81%B8Z\",\n          \"isSelectable\": true\n        }\n      }\n    }\n  },\n  {\n    \"title\": \"block sample 1\",\n    \"value\": {\n      \"name\": \"z=K\",\n      \"ay\": 2022,\n      \"assign\": [\n        \"S\\\"5Uw,0O\",\n        \"w&E\",\n        \"79K\\\\\"\n      ],\n      \"satisfy\": [],\n      \"url\": \"https://5.dodgqzx/,s/X%EE%8D%B2$a2d1/'\",\n      \"info\": \"!5\",\n      \"isSelectable\": true,\n      \"\": {\n        \"name\": \"Bio\\\"RERP2\",\n        \"ay\": 1989,\n        \"assign\": \"(P?9I.\",\n        \"match\": [],\n        \"satisfy\": {\n          \"and\": [\n            {\n              \"or\": [\n                {\n                  \"or\": [\n                    \"M:~pR\",\n                    \"0*;<\",\n                    \"\\\"`E6d\",\n                    {\n                      \"or\": []\n                    }\n                  ]\n                },\n                \"1#:n\"\n              ]\n            }\n          ]\n        },\n        \"info\": \"Kyvwi'aI\",\n        \"isSelectable\": true\n      },\n      \"o'a\": {\n        \"name\": \"?\",\n        \"ay\": 1987,\n        \"assign\": \"\",\n        \"match\": [\n          \"EGG66*0\",\n          {\n            \"pattern\": \"WH89\",\n            \"exclude\": \"AQ4xZ\",\n            \"info\": \"a/)\"\n          },\n          \"LT3*64\",\n          {\n            \"and\": [\n              {\n                \"or\": [\n                  {\n                    \"pattern\": \"TSA6\",\n                    \"exclude\": \"TUZ*x\",\n                    \"info\": \"hqI.6L# )Y\"\n                  }\n                ]\n              },\n              {\n                \"pattern\": \"OID9*I\",\n                \"exclude\": \"DC36\"\n              },\n              {\n                \"pattern\": \"ZOL*85*\",\n                \"exclude\": [\n                  \"KH46N\",\n                  \"HVT4982X\",\n                  \"FRN90\"\n                ],\n                \"info\": \"H1:ZlJ|4\"\n              },\n              {\n                \"or\": []\n              },\n              {\n                \"pattern\": \"YGP4H\",\n                \"exclude\": [\n                  \"RSB0\",\n                  \"FF4\",\n                  \"XB78\",\n                  \"JJQ877\"\n                ],\n                \"info\": \"&z\\\\g(<wOos\"\n              }\n            ]\n          }\n        ],\n        \"url\": \"https://jyhje6r3laumh2i65vapwg67puuz7wdyry.eyk/5cQq963e5/z%F2%B7%AC%BExPI/t9ga@/e%F1%94%B5%A2y/iA/fI_)iTNS\",\n        \"info\": \"l/=Oz#V\",\n        \"isSelectable\": true\n      }\n    }\n  },\n  {\n    \"title\": \"block sample 2\",\n    \"value\": {\n      \"name\": \"3g]uvn(\\\\FO\",\n      \"ay\": 1983,\n      \"assign\": [\n        \"\",\n        \"|&Xr;?\"\n      ],\n      \"url\": \"http://7.gbgwne/5/MPy4g\",\n      \"info\": \"rhL<\",\n      \"T*J{6;c\": {\n        \"name\": \"\",\n        \"ay\": 1983,\n        \"assign\": [\n          \"mcB\",\n          \"qM5]*G&2\",\n          \" @NEM&VW\\\"\",\n          \"!B68#2yPB\",\n          \"vm[{(0F\"\n        ],\n        \"match\": {\n          \"pattern\": \"MQ985\",\n          \"info\": \"fTeH3\\\"\"\n        },\n        \"satisfy\": {\n          \"mc\": \">=150\"\n        },\n        \"url\": \"https://w.z.wex6bqx9.jzdbck/2E2sZLY/Ej2-l%E5%BF%85pI/Q%EF%B1%B6o3X+T/NkNB+g%F1%AC%86%BD1/:Ss7x&3U/9On%F0%A0%88%92/F&swOb1-_c/;wZ@%F0%95%A1%A3W\",\n        \"info\": \"E[Bzr77$P0\",\n        \"[`Wi=`\": {\n          \"name\": \"\",\n          \"ay\": 2003,\n          \"assign\": \"RTnS_9Z\\\"\",\n          \"match\": {\n            \"or\": [\n              {\n                \"or\": [\n                  \"SCL7*8\",\n                  {\n                    \"and\": []\n                  }\n                ]\n              },\n              \"LF09D\"\n            ]\n          },\n          \"satisfy\": [],\n          \"url\": \"https://7p90qb1i61ec8bxk4gnztdvvgl923z16mdp7vybrmsaikf9yq.42v85ffc44g89685.1kef30z8q8dsw3qd3x1wkp0-v6ueas1q356crjy.gt/7jp;%F3%96%AF%9ENeg/5YFla!9t./%F3%95%92%B0oaC=Ctdc(/~OA=QPNvtp/O,U6IRM/5m7o4J9/S)$\",\n          \"info\": \"_\",\n          \"isSelectable\": true\n        }\n      },\n      \"PD4\": {\n        \"name\": \"zx8\",\n        \"assign\": \"]RH'o .K\\\\\",\n        \"satisfy\": {\n          \"or\": [\n            {\n              \"or\": [\n                {\n                  \"or\": [\n                    {\n                      \"and\": [\n                        \"X8oq/?\",\n                        {\n                          \"or\": [\n                            \"_0[tE H,A\",\n                            \"7G\",\n                            \"oD\",\n                            \"mwN]dkP(\",\n                            \"@`tG\"\n                          ]\n                        },\n                        {\n                          \"mc\": \">=143\"\n                        },\n                        {\n                          \"or\": []\n                        },\n                        \" Uq4`]\"\n                      ]\n                    },\n                    \"?o3`\",\n                    {\n                      \"mc\": \">=64\"\n                    },\n                    \"\"\n                  ]\n                },\n                {\n                  \"mc\": \">=114\"\n                },\n                \"T\",\n                \"w5=<~$,_\"\n              ]\n            }\n          ]\n        },\n        \"url\": \"http://1i.f16pc6vq2zaea-5mq42x8c3rppcgp-m9.wse0z3us.3-ce5z.x2bojljdfhjw9h96xh17ffwkkrx0x3xa8v11wvwx6d78a7-ijn7uo6eet-2iomm.pfulqfofa/$T=%F1%89%B3%AE@T%F4%8E%9A%8E/3DEq63Pc/ki0fyG$/om/wC,2%F0%A5%A9%82r./PF/bm(nK2HO/dEbdCXz/~%F0%91%84%83-/PH\",\n        \"info\": \"\"\n      }\n    }\n  },\n  {\n    \"title\": \"block sample 3\",\n    \"value\": {\n      \"name\": \"=nU]<)\",\n      \"ay\": 2013,\n      \"assign\": [\n        \"&4SDN';YaL\",\n        \"^?5\",\n        \"`J|lLNzvt\",\n        \"t\",\n        \"YWx@e6\"\n      ],\n      \"match\": \"MMH9\",\n      \"satisfy\": \"\",\n      \"url\": \"https://xmounv65wow236kpt4reuohexpoll3wc9osuux65xctjgtmvtfkd.efgc7gea580ym2wavnmlglkhpvdajw-20odn1db7kmhj8ertq-zuc.9--rp9w3zwdi62vl08to-czw1urbv3b0my2oe22emh-jzbd.9wx9z82l5wj2tzog6050-h1umh3ivfk04tqt7lf1ioken3j0c2.avby10cf-wzmqi7ne.mag/%F2%9E%B5%80W%F4%8E%9D%B0%F2%91%A4%BEdX.7e;/Lk4/6%F1%A2%9D%8D%F1%AC%BA%B9//:%F1%89%B0%8EW-/=.fc//')u&Lc(ak/V)+\",\n      \"info\": \"]i\",\n      \"isSelectable\": true\n    }\n  },\n  {\n    \"title\": \"block sample 4\",\n    \"value\": {\n      \"name\": \"$]#N V~{` \",\n      \"match\": {\n        \"or\": [\n          {\n            \"pattern\": \"YQ**\",\n            \"info\": \"A{};$?\"\n          },\n          \"CQL090D\"\n        ]\n      },\n      \"satisfy\": \"<1\",\n      \"info\": \"\",\n      \"isSelectable\": true\n    }\n  },\n  {\n    \"title\": \"block sample 5\",\n    \"value\": {\n      \"name\": \"On\",\n      \"ay\": 2024,\n      \"assign\": [\n        \"+>Ic8Q\"\n      ],\n      \"match\": {\n        \"pattern\": \"QU4C\",\n        \"exclude\": \"EN540x\",\n        \"info\": \"K2M\"\n      },\n      \"satisfy\": [\n        {\n          \"or\": []\n        }\n      ],\n      \"url\": \"https://h.u6d1d7d9e5oragcm.jfl//DSf;a\",\n      \"isSelectable\": true\n    }\n  },\n  {\n    \"title\": \"block sample 6\",\n    \"value\": {\n      \"name\": \"#>! z&%\",\n      \"assign\": \"MI#+7:W\",\n      \"match\": {\n        \"and\": [\n          {\n            \"pattern\": \"RXS214X\",\n            \"exclude\": \"NVO3463Z\",\n            \"info\": \"o9o\"\n          },\n          {\n            \"pattern\": \"YM293\",\n            \"exclude\": \"XU20x4M\",\n            \"info\": \" w-6\"\n          },\n          \"TTHxx*\",\n          \"AD5\",\n          {\n            \"and\": [\n              \"FA5Q\",\n              {\n                \"or\": [\n                  {\n                    \"and\": [\n                      {\n                        \"pattern\": \"YP6\",\n                        \"exclude\": [\n                          \"UW6193X\",\n                          \"UFV0\",\n                          \"BUx5M\",\n                          \"UIX029O\"\n                        ]\n                      },\n                      \"QZx\",\n                      \"XDLxZ\",\n                      \"DLT18\"\n                    ]\n                  },\n                  {\n                    \"or\": []\n                  }\n                ]\n              },\n              \"PEB*2O\",\n              \"NLH5803N\",\n              {\n                \"or\": [\n                  \"DU*9\",\n                  \"UO97\"\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      \"satisfy\": {\n        \"and\": [\n          {\n            \"or\": []\n          },\n          {\n            \"and\": [\n              \"8eF\",\n              {\n                \"and\": []\n              },\n              \"G^9`\\\\O;iO\",\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"url\": \"https://6eu186.xteknf.xpbmypyif/wL%F1%B9%9C%99%F2%97%83%BDM4;/%F2%8E%A6%93.!j\",\n      \"info\": \" \",\n      \"isSelectable\": true\n    }\n  },\n  {\n    \"title\": \"block sample 7\",\n    \"value\": {\n      \"name\": \"]F<^ .s#*\",\n      \"ay\": 1968,\n      \"assign\": [\n        \"4(/\"\n      ],\n      \"match\": {\n        \"or\": [\n          {\n            \"and\": [\n              \"ZQ*4\"\n            ]\n          }\n        ]\n      },\n      \"satisfy\": {\n        \"mc\": \"<=3\"\n      },\n      \"info\": \"-zT})u\",\n      \"isSelectable\": true\n    }\n  },\n  {\n    \"title\": \"block sample 8\",\n    \"value\": {\n      \"name\": \"l$v~\",\n      \"ay\": 1953,\n      \"assign\": \"s?QA\",\n      \"satisfy\": [\n        {\n          \"mc\": \">=101\"\n        },\n        \"~d8\"\n      ],\n      \"info\": \"&%%$\",\n      \"isSelectable\": true,\n      \"z&_MV&\": {\n        \"name\": \"H(U\",\n        \"ay\": 1950,\n        \"assign\": \"_R\",\n        \"match\": [],\n        \"satisfy\": \"A]1e\",\n        \"info\": \"t\",\n        \"isSelectable\": true\n      },\n      \"\": {\n        \"name\": \"og(glF7\",\n        \"ay\": 1950,\n        \"assign\": \"EL$s#C9&\",\n        \"match\": {\n          \"and\": [\n            {\n              \"pattern\": \"EM9X\",\n              \"exclude\": [\n                \"PW1922K\",\n                \"RLD61Z\",\n                \"TOM19*B\"\n              ],\n              \"info\": \".89t\"\n            },\n            {\n              \"or\": [\n                {\n                  \"and\": [\n                    {\n                      \"or\": [\n                        \"PZM5G\",\n                        \"JCW549V\",\n                        \"MBO01*\",\n                        {\n                          \"pattern\": \"RPU6x92G\",\n                          \"exclude\": [\n                            \"BQx8*8H\"\n                          ],\n                          \"info\": \")\"\n                        },\n                        \"FDA11U\"\n                      ]\n                    },\n                    \"SWN2x49Z\",\n                    \"EC4547\"\n                  ]\n                },\n                {\n                  \"pattern\": \"KV142\",\n                  \"exclude\": \"LJ347B\",\n                  \"info\": \"#<\"\n                },\n                \"KB530C\",\n                {\n                  \"pattern\": \"LTG7306P\",\n                  \"exclude\": \"YAJ769*\",\n                  \"info\": \"C\"\n                }\n              ]\n            }\n          ]\n        },\n        \"satisfy\": {\n          \"mc\": \">=112\"\n        },\n        \"url\": \"https://2fdc4bj51qmch1ex4yjeoh1x57h36050gjudp7wzdy-gy.jlcl7p9gnvaeqyg3017451zzmzzg3-v0-mj0h2bt7v157weguu5o5ewub452g.j8jsshadidqtesmt3vokg-a2-mygvmre3qufd0ju30q5rw35tz1bxcmnp.ad/:DDy/~%F0%B8%B1%ABwC%E0%A4%B0,//$/'=M!0//\",\n        \"info\": \"a`8V\",\n        \"isSelectable\": true\n      }\n    }\n  },\n  {\n    \"title\": \"block sample 9\",\n    \"value\": {\n      \"name\": \"\",\n      \"ay\": 1954,\n      \"assign\": [\n        \"oO%\",\n        \"=\"\n      ],\n      \"match\": {\n        \"or\": []\n      },\n      \"satisfy\": [\n        {\n          \"or\": [\n            {\n              \"mc\": \">=139\"\n            },\n            {\n              \"or\": [\n                \"Nkq)[J|H\",\n                {\n                  \"mc\": \"<=121\"\n                }\n              ]\n            },\n            {\n              \"or\": [\n                \"dPIP+RQZWV\",\n                {\n                  \"and\": []\n                },\n                {\n                  \"and\": [\n                    {\n                      \"or\": [\n                        \"0ij1TpzaUl\",\n                        \"3Nw\\\\yvhU@:\",\n                        \"MN5Qo.g\",\n                        {\n                          \"or\": [\n                            \"0$>w<oFJ\",\n                            \",G`]\\\"m&\",\n                            \"&EC[t!\",\n                            \"&n\"\n                          ]\n                        }\n                      ]\n                    },\n                    \"uQ\",\n                    \"N\",\n                    {\n                      \"or\": []\n                    },\n                    {\n                      \"mc\": \"<=38\"\n                    }\n                  ]\n                },\n                \"\",\n                {\n                  \"and\": [\n                    \"N^H#EjJ\"\n                  ]\n                }\n              ]\n            },\n            {\n              \"mc\": \">=173\"\n            }\n          ]\n        },\n        {\n          \"and\": []\n        },\n        \"|\"\n      ],\n      \"url\": \"http://alqwcisn7zt283xse3xp6na8s3iqhuywi8hgd76shpiyluoq.rqlhfnkft\",\n      \"isSelectable\": true\n    }\n  }\n]",
              "code": "fast_check_1.sample(index_test_2.block, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `block sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(index_test_2.block, ajvValidate));",
              "err": {},
              "uuid": "29a3e9f2-a66f-47db-8bed-da8c1dd646e6",
              "parentUUID": "b7c90c7b-54b9-4616-bd29-a534718b255c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate non-object",
              "fullTitle": "blockSchema should not validate non-object",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const error = {\n    instancePath: \"\",\n    message: \"block should be an object\",\n};\nisInvalidBlock(null, error);\nisInvalidBlock(undefined, error);\nisInvalidBlock(10, error);\nisInvalidBlock([12, 24], error);\nisInvalidBlock(\"abc\", error);",
              "err": {},
              "uuid": "ea053899-ab8f-4ace-8765-ad3a1d3d0090",
              "parentUUID": "b7c90c7b-54b9-4616-bd29-a534718b255c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate block with invalid properties",
              "fullTitle": "blockSchema should not validate block with invalid properties",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isInvalidBlock({\n        name: { foo: \"bar\" },\n        ay: -1000,\n        assign: {},\n        match: 1,\n        satisfy: 2,\n        url: { abc: \"def\" },\n        info: 42,\n        isSelectable: 32,\n    }, { instancePath: \"/name\", message: \"property 'name' should be a string\" }, {\n        instancePath: \"/ay\",\n        message: \"property 'ay' should be a positive integer\",\n    }, {\n        instancePath: \"/assign\",\n        message: \"property 'assign' should be either a block ID or an array of block IDs\",\n    }, {\n        instancePath: \"/match\",\n        message: \"property 'match' should be either a match rule or an array of match rules\",\n    }, {\n        instancePath: \"/satisfy\",\n        message: \"property 'satisfy' should be either a satisfy rule or an array of satisfy rules\",\n    }, { instancePath: \"/url\", message: \"property 'url' should be a string\" }, { instancePath: \"/info\", message: \"property 'info' should be a string\" }, {\n        instancePath: \"/isSelectable\",\n        message: \"property 'isSelectable' should be a boolean\",\n    })",
              "err": {},
              "uuid": "4376504d-7906-4d32-b0b7-0d3f988bd441",
              "parentUUID": "b7c90c7b-54b9-4616-bd29-a534718b255c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29a3e9f2-a66f-47db-8bed-da8c1dd646e6",
            "ea053899-ab8f-4ace-8765-ad3a1d3d0090",
            "4376504d-7906-4d32-b0b7-0d3f988bd441"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 163,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "55df07ce-82b2-429d-8c78-f3011a327484",
          "title": "patternToRE",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/matchRule/pattern/satisfiers.test.ts",
          "file": "/src/matchRule/pattern/satisfiers.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should match valid modules with a single pattern",
              "fullTitle": "patternToRE should match valid modules with a single pattern",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"patternExampleList sample 0\",\n    \"value\": [\n      \"YM*864\",\n      [\n        \"YMC3O864\",\n        \"YMQQ2864\",\n        \"YMALT864\",\n        \"YM864\",\n        \"YMTTN864\"\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleList sample 1\",\n    \"value\": [\n      \"AQ0F\",\n      [\n        \"AQ0F\"\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleList sample 2\",\n    \"value\": [\n      \"SLT3P\",\n      [\n        \"SLT3P\"\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleList sample 3\",\n    \"value\": [\n      \"YON*2K\",\n      [\n        \"YONE2K\",\n        \"YONC2K\",\n        \"YONAF2OK2K\",\n        \"YONF82K\",\n        \"YON2K\"\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleList sample 4\",\n    \"value\": [\n      \"QJ24\",\n      [\n        \"QJ24\"\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleList sample 5\",\n    \"value\": [\n      \"NG36xP\",\n      [\n        \"NG361P\",\n        \"NG360P\",\n        \"NG365P\",\n        \"NG363P\",\n        \"NG367P\",\n        \"NG364P\",\n        \"NG368P\",\n        \"NG366P\"\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleList sample 6\",\n    \"value\": [\n      \"YNx50Z\",\n      [\n        \"YN050Z\",\n        \"YN550Z\",\n        \"YN250Z\",\n        \"YN850Z\",\n        \"YN750Z\",\n        \"YN150Z\"\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleList sample 7\",\n    \"value\": [\n      \"MUP4831\",\n      [\n        \"MUP4831\"\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleList sample 8\",\n    \"value\": [\n      \"PJ61\",\n      [\n        \"PJ61\"\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleList sample 9\",\n    \"value\": [\n      \"HZ4534I\",\n      [\n        \"HZ4534I\"\n      ]\n    ]\n  }\n]",
              "code": "fast_check_1.sample(index_test_1.patternExampleList, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `patternExampleList sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(index_test_1.patternExampleList, ([patternStr, examples]) => {\n    const re = _1.patternToRE(patternStr);\n    return examples.every(re.test.bind(re));\n}));",
              "err": {},
              "uuid": "30506c20-89d4-4a5a-bedd-1029c7922ac1",
              "parentUUID": "55df07ce-82b2-429d-8c78-f3011a327484",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should match valid modules with multiple patterns",
              "fullTitle": "patternToRE should match valid modules with multiple patterns",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"patternExampleListArray sample 0\",\n    \"value\": [\n      [\n        \"VRVx1\",\n        [\n          \"VRV91\",\n          \"VRV51\",\n          \"VRV21\",\n          \"VRV71\"\n        ]\n      ],\n      [\n        \"BEH5R\",\n        [\n          \"BEH5R\"\n        ]\n      ],\n      [\n        \"JD*60N\",\n        [\n          \"JDZ60N\",\n          \"JD0CL060N\",\n          \"JDO7860N\",\n          \"JDIX9J60N\",\n          \"JD60N\",\n          \"JDUCHO60N\",\n          \"JD736PDED60N\",\n          \"JD57YI160N\",\n          \"JDC5MDTTP960N\",\n          \"JDJV67LNYS60N\",\n          \"JD9N09X60N\",\n          \"JD7JSD1GUU60N\"\n        ]\n      ],\n      [\n        \"CP7\",\n        [\n          \"CP7\"\n        ]\n      ],\n      [\n        \"CU631\",\n        [\n          \"CU631\"\n        ]\n      ],\n      [\n        \"IQR1\",\n        [\n          \"IQR1\"\n        ]\n      ],\n      [\n        \"SE1*08\",\n        [\n          \"SE108\",\n          \"SE1DTNXT2O08\",\n          \"SE1EEHWNFG208\",\n          \"SE13NHK08\",\n          \"SE1JBD08\"\n        ]\n      ],\n      [\n        \"YC888\",\n        [\n          \"YC888\"\n        ]\n      ],\n      [\n        \"YU51*Y\",\n        [\n          \"YU51OFXY\",\n          \"YU5185CPQEY\",\n          \"YU5121HWY\",\n          \"YU51DKQDB1Y\",\n          \"YU513SY\",\n          \"YU51AY\",\n          \"YU5184IY\",\n          \"YU51F8Y\"\n        ]\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleListArray sample 1\",\n    \"value\": [\n      [\n        \"AYx3*\",\n        [\n          \"AY13YUS9\",\n          \"AY73EVNH0YH\",\n          \"AY935P\",\n          \"AY933WY3\"\n        ]\n      ],\n      [\n        \"RYP73V\",\n        [\n          \"RYP73V\"\n        ]\n      ],\n      [\n        \"UEM1\",\n        [\n          \"UEM1\"\n        ]\n      ],\n      [\n        \"APR**42\",\n        [\n          \"APRYAO3K558MMF42\",\n          \"APR5SPEPZS42\",\n          \"APRM944O0V42\",\n          \"APRI0A7FH542\",\n          \"APR5V70GF42\",\n          \"APRZABVLY2E1X42\",\n          \"APR33J3XFS85JB642\"\n        ]\n      ],\n      [\n        \"HV072\",\n        [\n          \"HV072\"\n        ]\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleListArray sample 2\",\n    \"value\": [\n      [\n        \"XO6\",\n        [\n          \"XO6\"\n        ]\n      ],\n      [\n        \"DI588W\",\n        [\n          \"DI588W\"\n        ]\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleListArray sample 3\",\n    \"value\": [\n      [\n        \"SWA5R\",\n        [\n          \"SWA5R\"\n        ]\n      ],\n      [\n        \"BS71\",\n        [\n          \"BS71\"\n        ]\n      ],\n      [\n        \"UAS19\",\n        [\n          \"UAS19\"\n        ]\n      ],\n      [\n        \"BT3\",\n        [\n          \"BT3\"\n        ]\n      ],\n      [\n        \"GZ87\",\n        [\n          \"GZ87\"\n        ]\n      ],\n      [\n        \"ELM66\",\n        [\n          \"ELM66\"\n        ]\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleListArray sample 4\",\n    \"value\": [\n      [\n        \"WYQ7\",\n        [\n          \"WYQ7\"\n        ]\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleListArray sample 5\",\n    \"value\": [\n      [\n        \"OMA5\",\n        [\n          \"OMA5\"\n        ]\n      ],\n      [\n        \"IN229\",\n        [\n          \"IN229\"\n        ]\n      ],\n      [\n        \"LBV0\",\n        [\n          \"LBV0\"\n        ]\n      ],\n      [\n        \"UAT5\",\n        [\n          \"UAT5\"\n        ]\n      ],\n      [\n        \"KP4x\",\n        [\n          \"KP41\"\n        ]\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleListArray sample 6\",\n    \"value\": [\n      [\n        \"XQ*27T\",\n        [\n          \"XQFT27T\",\n          \"XQ1CK27T\",\n          \"XQN27T\",\n          \"XQCA27T\"\n        ]\n      ],\n      [\n        \"SU52*4\",\n        [\n          \"SU522J279V94\",\n          \"SU52HYX2TY4\",\n          \"SU52F54\",\n          \"SU52ZQZ4X4\",\n          \"SU52BZLKW44\",\n          \"SU5254\",\n          \"SU52ZIDHL4\",\n          \"SU52H4\",\n          \"SU52IGQPP4\",\n          \"SU52QQOISNV44\",\n          \"SU52JEP3UN84\",\n          \"SU5204\"\n        ]\n      ],\n      [\n        \"WM9W\",\n        [\n          \"WM9W\"\n        ]\n      ],\n      [\n        \"UDQx2P\",\n        [\n          \"UDQ52P\",\n          \"UDQ82P\",\n          \"UDQ12P\",\n          \"UDQ22P\",\n          \"UDQ02P\",\n          \"UDQ32P\"\n        ]\n      ],\n      [\n        \"CR8221\",\n        [\n          \"CR8221\"\n        ]\n      ],\n      [\n        \"NJ020x\",\n        [\n          \"NJ0203\",\n          \"NJ0200\",\n          \"NJ0209\",\n          \"NJ0208\"\n        ]\n      ],\n      [\n        \"ISX40\",\n        [\n          \"ISX40\"\n        ]\n      ],\n      [\n        \"XFD5\",\n        [\n          \"XFD5\"\n        ]\n      ],\n      [\n        \"OESxZ\",\n        [\n          \"OES2Z\",\n          \"OES8Z\",\n          \"OES4Z\",\n          \"OES9Z\",\n          \"OES6Z\",\n          \"OES0Z\",\n          \"OES5Z\",\n          \"OES7Z\",\n          \"OES1Z\"\n        ]\n      ],\n      [\n        \"ZI0024\",\n        [\n          \"ZI0024\"\n        ]\n      ],\n      [\n        \"BPx662\",\n        [\n          \"BP8662\",\n          \"BP4662\",\n          \"BP7662\",\n          \"BP9662\",\n          \"BP2662\",\n          \"BP5662\",\n          \"BP6662\",\n          \"BP1662\",\n          \"BP0662\",\n          \"BP3662\"\n        ]\n      ],\n      [\n        \"PVO056I\",\n        [\n          \"PVO056I\"\n        ]\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleListArray sample 7\",\n    \"value\": [\n      [\n        \"HW7\",\n        [\n          \"HW7\"\n        ]\n      ],\n      [\n        \"WX1*\",\n        [\n          \"WX1\"\n        ]\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleListArray sample 8\",\n    \"value\": [\n      [\n        \"ZH5\",\n        [\n          \"ZH5\"\n        ]\n      ],\n      [\n        \"OH9x\",\n        [\n          \"OH90\",\n          \"OH98\"\n        ]\n      ],\n      [\n        \"AF2N\",\n        [\n          \"AF2N\"\n        ]\n      ],\n      [\n        \"DU70*\",\n        [\n          \"DU70\",\n          \"DU706UR\",\n          \"DU70PLHWFTKV\",\n          \"DU70B\",\n          \"DU70KL5FG\",\n          \"DU70HG\",\n          \"DU70NYF9GAW\",\n          \"DU70TZQ\"\n        ]\n      ],\n      [\n        \"HQU7226\",\n        [\n          \"HQU7226\"\n        ]\n      ],\n      [\n        \"JJ9\",\n        [\n          \"JJ9\"\n        ]\n      ],\n      [\n        \"RL7\",\n        [\n          \"RL7\"\n        ]\n      ],\n      [\n        \"EW93Y\",\n        [\n          \"EW93Y\"\n        ]\n      ],\n      [\n        \"ZK*A\",\n        [\n          \"ZKA\",\n          \"ZKLX14A\"\n        ]\n      ],\n      [\n        \"GX2*2\",\n        [\n          \"GX2EO2\"\n        ]\n      ],\n      [\n        \"GZ7\",\n        [\n          \"GZ7\"\n        ]\n      ],\n      [\n        \"BY8Y\",\n        [\n          \"BY8Y\"\n        ]\n      ]\n    ]\n  },\n  {\n    \"title\": \"patternExampleListArray sample 9\",\n    \"value\": [\n      [\n        \"NFT4195A\",\n        [\n          \"NFT4195A\"\n        ]\n      ],\n      [\n        \"OK*71\",\n        [\n          \"OKZWA1P71\",\n          \"OKI171\",\n          \"OKR271\",\n          \"OK9D071\",\n          \"OK71\",\n          \"OKRRP2DS71\",\n          \"OKW71\",\n          \"OKJIMQS4871\",\n          \"OKJ71\"\n        ]\n      ],\n      [\n        \"CXE8L\",\n        [\n          \"CXE8L\"\n        ]\n      ],\n      [\n        \"NK70x\",\n        [\n          \"NK707\",\n          \"NK701\",\n          \"NK702\",\n          \"NK700\",\n          \"NK704\",\n          \"NK708\",\n          \"NK709\",\n          \"NK703\",\n          \"NK706\",\n          \"NK705\"\n        ]\n      ],\n      [\n        \"RP964\",\n        [\n          \"RP964\"\n        ]\n      ],\n      [\n        \"XJD*9\",\n        [\n          \"XJDO91YQJM9\",\n          \"XJDM9\",\n          \"XJD09\",\n          \"XJD7LP4FY9\",\n          \"XJD6D9\",\n          \"XJD7FV9\",\n          \"XJDCEJDR6Q9\",\n          \"XJDX58ED139\",\n          \"XJD9\",\n          \"XJDVOH9\",\n          \"XJDKAU9\"\n        ]\n      ]\n    ]\n  }\n]",
              "code": "const patternExampleListArray = fast_check_1.array(index_test_1.patternExampleList, { minLength: 1 });\nfast_check_1.sample(patternExampleListArray, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `patternExampleListArray sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(patternExampleListArray, (ts) => {\n    const re = _1.patternToRE(...ts.map(([patternStr]) => patternStr));\n    return ts\n        .map(([, examples]) => examples)\n        .flat()\n        .every(re.test.bind(re));\n}));",
              "err": {},
              "uuid": "48442cc9-e3dd-4e0f-82b3-a87fc7fda835",
              "parentUUID": "55df07ce-82b2-429d-8c78-f3011a327484",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not match x to non-number",
              "fullTitle": "patternToRE should not match x to non-number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const re = _1.patternToRE(\"x\");\n[\"A\", \"Z\", \"c\", \"#\"].forEach((example) => isInvalidExample(re, example));",
              "err": {},
              "uuid": "9a178b31-ae1d-4b79-babc-b517d37467d9",
              "parentUUID": "55df07ce-82b2-429d-8c78-f3011a327484",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not match * to a substring composed of characters other than A-Z and 0-9",
              "fullTitle": "patternToRE should not match * to a substring composed of characters other than A-Z and 0-9",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const re = _1.patternToRE(\"*\");\n[\"c\", \"Ac\", \"cA\", \"0Ax\", \"x0A\", \"BA#\", \"#AB\"].forEach((example) => isInvalidExample(re, example));",
              "err": {},
              "uuid": "e54a6e91-b204-40dd-959b-f255caf84b0f",
              "parentUUID": "55df07ce-82b2-429d-8c78-f3011a327484",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not match substrings",
              "fullTitle": "patternToRE should not match substrings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const re = _1.patternToRE(\"A*xC\");\n[\"A1CZ\", \"AC1CZ\", \"ZA1C\", \"ZAC1C\", \"ZA1CZ\", \"ZAC1CZ\"].forEach((example) => isInvalidExample(re, example));",
              "err": {},
              "uuid": "77e4c26f-6440-4724-aae2-62ac19c456fb",
              "parentUUID": "55df07ce-82b2-429d-8c78-f3011a327484",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "30506c20-89d4-4a5a-bedd-1029c7922ac1",
            "48442cc9-e3dd-4e0f-82b3-a87fc7fda835",
            "9a178b31-ae1d-4b79-babc-b517d37467d9",
            "e54a6e91-b204-40dd-959b-f255caf84b0f",
            "77e4c26f-6440-4724-aae2-62ac19c456fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "324e92ee-e57c-4367-b552-ff07fabb7ef3",
          "title": "patternSatisfier",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/matchRule/pattern/satisfiers.test.ts",
          "file": "/src/matchRule/pattern/satisfiers.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assign all modules with *",
              "fullTitle": "patternSatisfier should assign all modules with *",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { assign } = satisfiers_1.patternSatisfier(ref, \"*\");\nisCorrectAssign(assign, modulesList1, modulesList1.map(([moduleStr]) => moduleStr));",
              "err": {},
              "uuid": "0f0be8b1-bc23-42fd-ba33-f0e6bfd9042b",
              "parentUUID": "324e92ee-e57c-4367-b552-ff07fabb7ef3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should assign only valid modules with pattern containing *",
              "fullTitle": "patternSatisfier should assign only valid modules with pattern containing *",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { assign } = satisfiers_1.patternSatisfier(ref, \"CS2*\");\nisCorrectAssign(assign, modulesList1, [\"CS2100\", \"CS2040S\", \"CS2030\"]);",
              "err": {},
              "uuid": "e4e87e80-248e-4bc6-b820-84260725641e",
              "parentUUID": "324e92ee-e57c-4367-b552-ff07fabb7ef3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should assign only valid modules with pattern containing x",
              "fullTitle": "patternSatisfier should assign only valid modules with pattern containing x",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { assign } = satisfiers_1.patternSatisfier(ref, \"CS20xx\");\nisCorrectAssign(assign, modulesList1, [\"CS2030\"]);",
              "err": {},
              "uuid": "b91b3528-1ac4-4dac-9f1c-fd914d0e99d8",
              "parentUUID": "324e92ee-e57c-4367-b552-ff07fabb7ef3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should assign only valid modules with pattern containing x and *",
              "fullTitle": "patternSatisfier should assign only valid modules with pattern containing x and *",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { assign } = satisfiers_1.patternSatisfier(ref, \"CS20xx*\");\nisCorrectAssign(assign, modulesList1, [\"CS2040S\", \"CS2030\"]);",
              "err": {},
              "uuid": "c0dfd85e-e178-45a6-99b4-445201eac5c4",
              "parentUUID": "324e92ee-e57c-4367-b552-ff07fabb7ef3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f0be8b1-bc23-42fd-ba33-f0e6bfd9042b",
            "e4e87e80-248e-4bc6-b820-84260725641e",
            "b91b3528-1ac4-4dac-9f1c-fd914d0e99d8",
            "c0dfd85e-e178-45a6-99b4-445201eac5c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "540a8ddd-3c8f-47f8-9301-ba0073aa5ead",
          "title": "patternSchema",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/matchRule/pattern/schemas.test.ts",
          "file": "/src/matchRule/pattern/schemas.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate non-empty pattern composed of A-Z, 0-9, x or *",
              "fullTitle": "patternSchema should validate non-empty pattern composed of A-Z, 0-9, x or *",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"pattern sample 0\",\n    \"value\": \"NC936\"\n  },\n  {\n    \"title\": \"pattern sample 1\",\n    \"value\": \"NI5\"\n  },\n  {\n    \"title\": \"pattern sample 2\",\n    \"value\": \"IXO2L\"\n  },\n  {\n    \"title\": \"pattern sample 3\",\n    \"value\": \"KA51\"\n  },\n  {\n    \"title\": \"pattern sample 4\",\n    \"value\": \"WBS5H\"\n  },\n  {\n    \"title\": \"pattern sample 5\",\n    \"value\": \"IF25\"\n  },\n  {\n    \"title\": \"pattern sample 6\",\n    \"value\": \"RI*082\"\n  },\n  {\n    \"title\": \"pattern sample 7\",\n    \"value\": \"KD74\"\n  },\n  {\n    \"title\": \"pattern sample 8\",\n    \"value\": \"QS36\"\n  },\n  {\n    \"title\": \"pattern sample 9\",\n    \"value\": \"FWZ92x*\"\n  }\n]",
              "code": "fast_check_1.sample(index_test_2.pattern, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `pattern sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(index_test_2.pattern, ajvValidate), {\n    examples: [[\"*\"], [\"ACC1002\"], [\"IS1103\"], [\"CS1231S\"], [\"MA1102R\"]],\n});",
              "err": {},
              "uuid": "a6f6d142-63e3-4a3e-af16-c32cc0ee33db",
              "parentUUID": "540a8ddd-3c8f-47f8-9301-ba0073aa5ead",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate empty pattern",
              "fullTitle": "patternSchema should not validate empty pattern",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isInvalidPattern(\"\")",
              "err": {},
              "uuid": "e168ba79-63df-49c7-b8f4-3a0d76910132",
              "parentUUID": "540a8ddd-3c8f-47f8-9301-ba0073aa5ead",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate pattern with invalid characters",
              "fullTitle": "patternSchema should not validate pattern with invalid characters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "[\"AB123a\", \"Ac123a\", \"AB123^S\", \"AB1*3^S\", \"$A1*3^S\", \"/A1x33S\"].forEach(isInvalidPattern)",
              "err": {},
              "uuid": "7f75cddc-5d4a-4271-9033-0d53f2d20111",
              "parentUUID": "540a8ddd-3c8f-47f8-9301-ba0073aa5ead",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6f6d142-63e3-4a3e-af16-c32cc0ee33db",
            "e168ba79-63df-49c7-b8f4-3a0d76910132",
            "7f75cddc-5d4a-4271-9033-0d53f2d20111"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7404e0c2-78ac-4b79-af98-8186d7d26e9b",
          "title": "patternMatchRuleSatisfier",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/matchRule/satisfiers.test.ts",
          "file": "/src/matchRule/satisfiers.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should assign only valid modules with pattern match rule containing no exclude patterns",
              "fullTitle": "patternMatchRuleSatisfier should assign only valid modules with pattern match rule containing no exclude patterns",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { assign } = satisfiers_1.patternMatchRuleSatisfier(ref, { pattern: \"CS1xxx*\" });\nisCorrectAssign(assign, modulesList1, [\"CS1231\", \"CS1231S\"]);",
              "err": {},
              "uuid": "ef4f4430-5e59-4add-977a-478c3a5b9366",
              "parentUUID": "7404e0c2-78ac-4b79-af98-8186d7d26e9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should assign only valid modules with pattern match rule containing an exclude pattern",
              "fullTitle": "patternMatchRuleSatisfier should assign only valid modules with pattern match rule containing an exclude pattern",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { assign } = satisfiers_1.patternMatchRuleSatisfier(ref, {\n    pattern: \"MA1xxx*\",\n    exclude: \"MA15xx\",\n});\nisCorrectAssign(assign, modulesList1, [\n    \"MA1100\",\n    \"MA1101R\",\n    \"MA1102R\",\n    \"MA1511A\",\n]);",
              "err": {},
              "uuid": "ff1b8ecb-d297-4215-8ba4-89239e596a16",
              "parentUUID": "7404e0c2-78ac-4b79-af98-8186d7d26e9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should assign only valid modules with pattern match rule containing multiple exclude patterns",
              "fullTitle": "patternMatchRuleSatisfier should assign only valid modules with pattern match rule containing multiple exclude patterns",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { assign } = satisfiers_1.patternMatchRuleSatisfier(ref, {\n    pattern: \"MA*\",\n    exclude: [\"MA151x*\", \"MA2xxx\"],\n});\nisCorrectAssign(assign, modulesList1, [\n    \"MA1100\",\n    \"MA1101R\",\n    \"MA1102R\",\n    \"MA1507\",\n    \"MA1521\",\n    \"MA2101S\",\n]);",
              "err": {},
              "uuid": "37491ed3-1891-485d-8fc3-def345ccb7d7",
              "parentUUID": "7404e0c2-78ac-4b79-af98-8186d7d26e9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef4f4430-5e59-4add-977a-478c3a5b9366",
            "ff1b8ecb-d297-4215-8ba4-89239e596a16",
            "37491ed3-1891-485d-8fc3-def345ccb7d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aadf32ed-384c-4070-9c52-041232db804d",
          "title": "matchRuleSchema",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/matchRule/schemas.test.ts",
          "file": "/src/matchRule/schemas.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate match rule with valid pattern",
              "fullTitle": "matchRuleSchema should validate match rule with valid pattern",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"pattern sample 0\",\n    \"value\": \"AYW*624G\"\n  },\n  {\n    \"title\": \"pattern sample 1\",\n    \"value\": \"CJ6x\"\n  },\n  {\n    \"title\": \"pattern sample 2\",\n    \"value\": \"QLY93\"\n  },\n  {\n    \"title\": \"pattern sample 3\",\n    \"value\": \"YL0*5\"\n  },\n  {\n    \"title\": \"pattern sample 4\",\n    \"value\": \"FPxB\"\n  },\n  {\n    \"title\": \"pattern sample 5\",\n    \"value\": \"SIM4*x\"\n  },\n  {\n    \"title\": \"pattern sample 6\",\n    \"value\": \"QX7\"\n  },\n  {\n    \"title\": \"pattern sample 7\",\n    \"value\": \"BB32\"\n  },\n  {\n    \"title\": \"pattern sample 8\",\n    \"value\": \"MBx*x\"\n  },\n  {\n    \"title\": \"pattern sample 9\",\n    \"value\": \"WD74H\"\n  }\n]",
              "code": "fast_check_1.sample(index_test_3.pattern, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `pattern sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(index_test_3.pattern, ajvValidate));",
              "err": {},
              "uuid": "d3e2246d-e66a-450b-9265-b36282363c6f",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate match rules with valid pattern, exclude and info",
              "fullTitle": "matchRuleSchema should validate match rules with valid pattern, exclude and info",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"patternMatchRule sample 0\",\n    \"value\": {\n      \"pattern\": \"WI454\",\n      \"exclude\": \"BSF5*\",\n      \"info\": \"gNLP\"\n    }\n  },\n  {\n    \"title\": \"patternMatchRule sample 1\",\n    \"value\": {\n      \"pattern\": \"IC85\",\n      \"exclude\": \"JB8O\",\n      \"info\": \"%%p+\\\"$#\"\n    }\n  },\n  {\n    \"title\": \"patternMatchRule sample 2\",\n    \"value\": {\n      \"pattern\": \"VM54\",\n      \"exclude\": \"XK7\",\n      \"info\": \"#&t\"\n    }\n  },\n  {\n    \"title\": \"patternMatchRule sample 3\",\n    \"value\": {\n      \"pattern\": \"NVG25X\",\n      \"exclude\": [\n        \"SQZ*110\",\n        \"ZFWx442\"\n      ],\n      \"info\": \"(\"\n    }\n  },\n  {\n    \"title\": \"patternMatchRule sample 4\",\n    \"value\": {\n      \"pattern\": \"SU0*G\",\n      \"exclude\": \"YIZ02x\"\n    }\n  },\n  {\n    \"title\": \"patternMatchRule sample 5\",\n    \"value\": {\n      \"pattern\": \"NMC819\",\n      \"exclude\": \"PW0*\",\n      \"info\": \"%[o\"\n    }\n  },\n  {\n    \"title\": \"patternMatchRule sample 6\",\n    \"value\": {\n      \"pattern\": \"FDJ08*\",\n      \"exclude\": []\n    }\n  },\n  {\n    \"title\": \"patternMatchRule sample 7\",\n    \"value\": {\n      \"pattern\": \"KP1194\",\n      \"exclude\": \"YO2H\",\n      \"info\": \"yz{E^\"\n    }\n  },\n  {\n    \"title\": \"patternMatchRule sample 8\",\n    \"value\": {\n      \"pattern\": \"UMS126L\",\n      \"exclude\": []\n    }\n  },\n  {\n    \"title\": \"patternMatchRule sample 9\",\n    \"value\": {\n      \"pattern\": \"WOQ9311K\",\n      \"exclude\": \"LB8670\",\n      \"info\": \"pqP\\\"s7jL\"\n    }\n  }\n]",
              "code": "fast_check_1.sample(index_test_2.patternMatchRule, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `patternMatchRule sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(index_test_2.patternMatchRule, ajvValidate));",
              "err": {},
              "uuid": "5ac3d446-8c47-453f-94dc-74fe0db2257f",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate valid recursive match rules",
              "fullTitle": "matchRuleSchema should validate valid recursive match rules",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"matchRule sample 0\",\n    \"value\": {\n      \"and\": [\n        {\n          \"and\": [\n            {\n              \"and\": [\n                \"AIG424\",\n                \"AJE5\"\n              ]\n            }\n          ]\n        },\n        \"RS**O\"\n      ]\n    }\n  },\n  {\n    \"title\": \"matchRule sample 1\",\n    \"value\": {\n      \"and\": [\n        \"FYx63K\",\n        \"RKx14\"\n      ]\n    }\n  },\n  {\n    \"title\": \"matchRule sample 2\",\n    \"value\": {\n      \"and\": [\n        {\n          \"pattern\": \"VTP001\",\n          \"info\": \"dd\\\\oB&\"\n        },\n        {\n          \"or\": []\n        }\n      ]\n    }\n  },\n  {\n    \"title\": \"matchRule sample 3\",\n    \"value\": \"FML627E\"\n  },\n  {\n    \"title\": \"matchRule sample 4\",\n    \"value\": \"EJ0x\"\n  },\n  {\n    \"title\": \"matchRule sample 5\",\n    \"value\": {\n      \"and\": [\n        {\n          \"or\": [\n            \"UQ549x\",\n            \"FM4962\",\n            {\n              \"or\": [\n                {\n                  \"or\": [\n                    {\n                      \"or\": [\n                        {\n                          \"and\": [\n                            \"XV8\",\n                            \"SMx25\",\n                            \"RL*4*\",\n                            \"MIZ07\",\n                            \"HR9640\"\n                          ]\n                        },\n                        \"GW291M\"\n                      ]\n                    },\n                    \"IDZ3x6\",\n                    \"KI638I\",\n                    {\n                      \"and\": [\n                        \"VG582\",\n                        \"ZS6\",\n                        \"EXN536A\",\n                        \"YI32G\",\n                        \"KV1054M\"\n                      ]\n                    },\n                    \"JL2E\"\n                  ]\n                },\n                \"LUY5\",\n                {\n                  \"or\": [\n                    \"TBIxx4T\",\n                    \"NAO03D\"\n                  ]\n                },\n                {\n                  \"and\": []\n                },\n                \"VYI42P\"\n              ]\n            },\n            \"DCQ25\",\n            \"YO29\"\n          ]\n        },\n        {\n          \"pattern\": \"IXQ8\",\n          \"exclude\": [],\n          \"info\": \"+q\"\n        },\n        {\n          \"or\": [\n            \"RXH467\",\n            {\n              \"and\": [\n                {\n                  \"or\": [\n                    \"OPZ064W\",\n                    \"BGX2029L\"\n                  ]\n                },\n                \"NE7X\",\n                \"ZJ154V\",\n                \"TSX9693D\",\n                \"WBD48V\"\n              ]\n            }\n          ]\n        },\n        \"BM01xD\",\n        {\n          \"or\": []\n        }\n      ]\n    }\n  },\n  {\n    \"title\": \"matchRule sample 6\",\n    \"value\": {\n      \"pattern\": \"YNZ*8*4Q\",\n      \"exclude\": \"BFN32x\",\n      \"info\": \"rIvWH\\\"[9uP\"\n    }\n  },\n  {\n    \"title\": \"matchRule sample 7\",\n    \"value\": {\n      \"pattern\": \"HH2\",\n      \"exclude\": [],\n      \"info\": \"%r\"\n    }\n  },\n  {\n    \"title\": \"matchRule sample 8\",\n    \"value\": \"BN19\"\n  },\n  {\n    \"title\": \"matchRule sample 9\",\n    \"value\": {\n      \"pattern\": \"EBR5xxx\",\n      \"exclude\": \"NB64\",\n      \"info\": \"\"\n    }\n  }\n]",
              "code": "fast_check_1.sample(index_test_2.matchRule, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `matchRule sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(index_test_2.matchRule, ajvValidate));",
              "err": {},
              "uuid": "7b48727e-a7fb-4a75-a11a-74edda76183e",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate non-string/object",
              "fullTitle": "matchRuleSchema should not validate non-string/object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const error = {\n    instancePath: \"\",\n    message: \"match rule should be either a string or an object\",\n};\nisInvalidRule(null, error);\nisInvalidRule(undefined, error);\nisInvalidRule(10, error);\nisInvalidRule([12, 24], error);",
              "err": {},
              "uuid": "1103060a-574d-41da-b0a3-d5b12b67a86e",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate match rules with extra properties",
              "fullTitle": "matchRuleSchema should not validate match rules with extra properties",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isInvalidRule({\n        and: [{ or: [{ pattern: \"CS2103T\", info2: \"foobar\" }], abc: \"def\" }],\n        mno: \"pqr\",\n    }, {\n        instancePath: \"/and/0/or/0\",\n        message: \"pattern match rule should have properties 'pattern', 'exclude' (optional) and 'info' (optional) only\",\n    }, {\n        instancePath: \"/and/0\",\n        message: \"or match rule should have property 'or' only\",\n    }, {\n        instancePath: \"\",\n        message: \"and match rule should have property 'and' only\",\n    })",
              "err": {},
              "uuid": "fbda609f-4c66-4ab7-a3f9-e2b58bfad379",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate ambiguous match rules",
              "fullTitle": "matchRuleSchema should not validate ambiguous match rules",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const message = \"match rule should have only one of properties 'pattern', 'and', 'or'\";\nisInvalidRule({\n    or: [\n        { pattern: \"CS1231\", and: [] },\n        { pattern: \"CS1231\", or: [] },\n        { and: [{ and: [\"abc\"], or: [\"def\"] }] },\n    ],\n}, { instancePath: \"/or/0\", message }, { instancePath: \"/or/1\", message }, { instancePath: \"/or/2/and/0\", message });",
              "err": {},
              "uuid": "0c6c4f31-4ac8-42c6-85e8-bfcd7fbe6fff",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate pattern match rule with invalid patterns",
              "fullTitle": "matchRuleSchema should not validate pattern match rule with invalid patterns",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const message = \"pattern should be a non-empty string composed of A-Z, 0-9, x or *\";\nisInvalidRule({\n    and: [\n        \"CS210c\",\n        { pattern: \"CS2100\", exclude: \"CS1231s\" },\n        { pattern: \"CS210#T\", exclude: [\"CS1231\", \"CS21%\"] },\n    ],\n}, { instancePath: \"/and/0\", message }, { instancePath: \"/and/1/exclude\", message }, { instancePath: \"/and/2/pattern\", message }, { instancePath: \"/and/2/exclude/1\", message });",
              "err": {},
              "uuid": "8ebbf915-61fc-4c1d-aba7-28afe96543de",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate pattern match rule with non-string/array exclude",
              "fullTitle": "matchRuleSchema should not validate pattern match rule with non-string/array exclude",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const message = \"property 'exclude' should be either a pattern or an array of patterns\";\nisInvalidRule({\n    or: [\n        { pattern: \"CS2101\", exclude: {} },\n        { pattern: \"CS2101\", exclude: 5 },\n    ],\n}, { instancePath: \"/or/0/exclude\", message }, { instancePath: \"/or/1/exclude\", message });",
              "err": {},
              "uuid": "c63c0cf3-48c8-47cd-b22a-36d79917b009",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate pattern match rule with non-string info",
              "fullTitle": "matchRuleSchema should not validate pattern match rule with non-string info",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const message = \"property 'info' should be a string\";\nisInvalidRule({ pattern: \"CS2101\", info: 42 }, { instancePath: \"/info\", message });",
              "err": {},
              "uuid": "f7d76544-a2ec-420b-bd05-e8f1e8bb20f6",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate and match rules with non-array property",
              "fullTitle": "matchRuleSchema should not validate and match rules with non-array property",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const message = \"property 'and' should be an array of match rules\";\nisInvalidRule({ or: [{ and: {} }, { or: [{ and: 3 }] }] }, { instancePath: \"/or/0/and\", message }, { instancePath: \"/or/1/or/0/and\", message });",
              "err": {},
              "uuid": "d630c7f3-9d20-4031-8ac0-bd1a9b443996",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate or match rules with non-array property",
              "fullTitle": "matchRuleSchema should not validate or match rules with non-array property",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const message = \"property 'or' should be an array of match rules\";\nisInvalidRule({ or: [{ or: {} }, { and: [{ or: 3 }] }] }, { instancePath: \"/or/0/or\", message }, { instancePath: \"/or/1/and/0/or\", message });",
              "err": {},
              "uuid": "30716b92-3603-470d-a4ce-6caf89224ad3",
              "parentUUID": "aadf32ed-384c-4070-9c52-041232db804d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3e2246d-e66a-450b-9265-b36282363c6f",
            "5ac3d446-8c47-453f-94dc-74fe0db2257f",
            "7b48727e-a7fb-4a75-a11a-74edda76183e",
            "1103060a-574d-41da-b0a3-d5b12b67a86e",
            "fbda609f-4c66-4ab7-a3f9-e2b58bfad379",
            "0c6c4f31-4ac8-42c6-85e8-bfcd7fbe6fff",
            "8ebbf915-61fc-4c1d-aba7-28afe96543de",
            "c63c0cf3-48c8-47cd-b22a-36d79917b009",
            "f7d76544-a2ec-420b-bd05-e8f1e8bb20f6",
            "d630c7f3-9d20-4031-8ac0-bd1a9b443996",
            "30716b92-3603-470d-a4ce-6caf89224ad3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af06e3bb-cacb-4eb1-897b-e446a8b06f57",
          "title": "inequalitySatisfier",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/satisfyRule/inequality/satisfiers.test.ts",
          "file": "/src/satisfyRule/inequality/satisfiers.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should satisfy lower bound of MCs if total MC count is higher",
              "fullTitle": "inequalitySatisfier should satisfy lower bound of MCs if total MC count is higher",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const satisfier = satisfiers_1.inequalitySatisfier(ref, \">=16\");\nsatisfier.should.have.property(\"constraint\");\nconst { constraint } = satisfier;\nisCorrectConstraint(constraint, modulesList1, true);",
              "err": {},
              "uuid": "bbc610b9-ed6d-47b1-b1b1-9485716b37a7",
              "parentUUID": "af06e3bb-cacb-4eb1-897b-e446a8b06f57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should satisfy lower bound of MCs if total MC count is equal",
              "fullTitle": "inequalitySatisfier should satisfy lower bound of MCs if total MC count is equal",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const satisfier = satisfiers_1.inequalitySatisfier(ref, \">=28\");\nsatisfier.should.have.property(\"constraint\");\nconst { constraint } = satisfier;\nisCorrectConstraint(constraint, modulesList1, true);",
              "err": {},
              "uuid": "2cb1a257-ed10-404e-9291-f2c73a2b4978",
              "parentUUID": "af06e3bb-cacb-4eb1-897b-e446a8b06f57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not satisfy lower bound of MCs if total MC count is lower",
              "fullTitle": "inequalitySatisfier should not satisfy lower bound of MCs if total MC count is lower",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const satisfier = satisfiers_1.inequalitySatisfier(ref, \">=40\");\nsatisfier.should.have.property(\"constraint\");\nconst { constraint } = satisfier;\nisCorrectConstraint(constraint, modulesList1, false);",
              "err": {},
              "uuid": "ca0f1dbf-4c3e-4981-be3e-78a568973fa8",
              "parentUUID": "af06e3bb-cacb-4eb1-897b-e446a8b06f57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should preserve list of modules with upper bound of MCs if total MC count is equal",
              "fullTitle": "inequalitySatisfier should preserve list of modules with upper bound of MCs if total MC count is equal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const satisfier = satisfiers_1.inequalitySatisfier(ref, \"<=28\");\nsatisfier.should.have.property(\"filter\");\nconst { filter } = satisfier;\nisCorrectFilter(filter, modulesList1, modulesList1.map(([moduleStr]) => moduleStr));",
              "err": {},
              "uuid": "f7952389-a70a-44bd-af4b-e1b6e0d1c0ba",
              "parentUUID": "af06e3bb-cacb-4eb1-897b-e446a8b06f57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should preserve list of modules with upper bound of MCs if total MC count is lower",
              "fullTitle": "inequalitySatisfier should preserve list of modules with upper bound of MCs if total MC count is lower",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const satisfier = satisfiers_1.inequalitySatisfier(ref, \"<=32\");\nsatisfier.should.have.property(\"filter\");\nconst { filter } = satisfier;\nisCorrectFilter(filter, modulesList1, modulesList1.map(([moduleStr]) => moduleStr));",
              "err": {},
              "uuid": "1507df87-1c88-4e61-88ff-fb35c43e7200",
              "parentUUID": "af06e3bb-cacb-4eb1-897b-e446a8b06f57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should truncate list of modules with upper bound of MCs at exact cutoff if total MC count is higher and there exists some starting sequence with exact MC count",
              "fullTitle": "inequalitySatisfier should truncate list of modules with upper bound of MCs at exact cutoff if total MC count is higher and there exists some starting sequence with exact MC count",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const satisfier = satisfiers_1.inequalitySatisfier(ref, \"<=16\");\nsatisfier.should.have.property(\"filter\");\nconst { filter } = satisfier;\nisCorrectFilter(filter, modulesList1, [\n    \"CS2100\",\n    \"GER1000\",\n    \"CS2040S\",\n    \"ST2131\",\n]);",
              "err": {},
              "uuid": "fb92c8ee-35f8-4c7b-8a42-27de8f9267c3",
              "parentUUID": "af06e3bb-cacb-4eb1-897b-e446a8b06f57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should truncate list of modules with upper bound of MCs, cutting off at the minimum starting sequence that exceeds upper bound, if total MC count is higher and there exists no starting sequence with exact MC count",
              "fullTitle": "inequalitySatisfier should truncate list of modules with upper bound of MCs, cutting off at the minimum starting sequence that exceeds upper bound, if total MC count is higher and there exists no starting sequence with exact MC count",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const satisfier = satisfiers_1.inequalitySatisfier(ref, \"<=17\");\nsatisfier.should.have.property(\"filter\");\nconst { filter } = satisfier;\nisCorrectFilter(filter, modulesList1, [\n    \"CS2100\",\n    \"GER1000\",\n    \"CS2040S\",\n    \"ST2131\",\n    \"MA1521\",\n]);",
              "err": {},
              "uuid": "15141f60-8850-4332-a0e6-37ef2be04b88",
              "parentUUID": "af06e3bb-cacb-4eb1-897b-e446a8b06f57",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbc610b9-ed6d-47b1-b1b1-9485716b37a7",
            "2cb1a257-ed10-404e-9291-f2c73a2b4978",
            "ca0f1dbf-4c3e-4981-be3e-78a568973fa8",
            "f7952389-a70a-44bd-af4b-e1b6e0d1c0ba",
            "1507df87-1c88-4e61-88ff-fb35c43e7200",
            "fb92c8ee-35f8-4c7b-8a42-27de8f9267c3",
            "15141f60-8850-4332-a0e6-37ef2be04b88"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e00bd14e-df29-41cf-9c85-ac050e195acd",
          "title": "inequalitySchema",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/satisfyRule/inequality/schemas.test.ts",
          "file": "/src/satisfyRule/inequality/schemas.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate inequality in the form <=n or >=n",
              "fullTitle": "inequalitySchema should validate inequality in the form <=n or >=n",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"inequality sample 0\",\n    \"value\": \">=194\"\n  },\n  {\n    \"title\": \"inequality sample 1\",\n    \"value\": \"<=2\"\n  },\n  {\n    \"title\": \"inequality sample 2\",\n    \"value\": \">=101\"\n  },\n  {\n    \"title\": \"inequality sample 3\",\n    \"value\": \">=193\"\n  },\n  {\n    \"title\": \"inequality sample 4\",\n    \"value\": \"<=6\"\n  },\n  {\n    \"title\": \"inequality sample 5\",\n    \"value\": \">=164\"\n  },\n  {\n    \"title\": \"inequality sample 6\",\n    \"value\": \"<=155\"\n  },\n  {\n    \"title\": \"inequality sample 7\",\n    \"value\": \">=195\"\n  },\n  {\n    \"title\": \"inequality sample 8\",\n    \"value\": \"<=122\"\n  },\n  {\n    \"title\": \"inequality sample 9\",\n    \"value\": \">=171\"\n  }\n]",
              "code": "fast_check_1.sample(index_test_2.inequality, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `inequality sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(index_test_2.inequality, ajvValidate));",
              "err": {},
              "uuid": "444bc0a2-7fb8-4b39-9d7c-c69861fb619f",
              "parentUUID": "e00bd14e-df29-41cf-9c85-ac050e195acd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate inequality of invalid form",
              "fullTitle": "inequalitySchema should not validate inequality of invalid form",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "[\n        \"\",\n        \"==23\",\n        \"23\",\n        \"<23\",\n        \">23\",\n        \"<=-1\",\n        \">=-1\",\n        \"<= 2\",\n        \">= 1\",\n        \"> 3\",\n        \"< 3\",\n        \"<=3a\",\n        \">=3a\",\n        \"a<=3\",\n        \"a>=3\",\n    ].forEach(isInvalidInequality)",
              "err": {},
              "uuid": "a9c1d50d-04df-4cae-ab15-93cf12828568",
              "parentUUID": "e00bd14e-df29-41cf-9c85-ac050e195acd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "444bc0a2-7fb8-4b39-9d7c-c69861fb619f",
            "a9c1d50d-04df-4cae-ab15-93cf12828568"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3757665a-6a2d-4353-93fc-65f9f6193fa2",
          "title": "satisfyRuleSchema",
          "fullFile": "/home/runner/work/planwithus-lib/planwithus-lib/src/satisfyRule/schemas.test.ts",
          "file": "/src/satisfyRule/schemas.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate satisfy rule with valid block id",
              "fullTitle": "satisfyRuleSchema should validate satisfy rule with valid block id",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fast_check_1.assert(fast_check_1.property(fast_check_1.string(), ajvValidate)",
              "err": {},
              "uuid": "a57b59de-7ae2-477b-8486-a6b200c4b9a3",
              "parentUUID": "3757665a-6a2d-4353-93fc-65f9f6193fa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate satisfy rules with valid mc",
              "fullTitle": "satisfyRuleSchema should validate satisfy rules with valid mc",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"mcSatisfyRule sample 0\",\n    \"value\": {\n      \"mc\": \"<=72\"\n    }\n  },\n  {\n    \"title\": \"mcSatisfyRule sample 1\",\n    \"value\": {\n      \"mc\": \"<=31\"\n    }\n  },\n  {\n    \"title\": \"mcSatisfyRule sample 2\",\n    \"value\": {\n      \"mc\": \">=193\"\n    }\n  },\n  {\n    \"title\": \"mcSatisfyRule sample 3\",\n    \"value\": {\n      \"mc\": \"<=4\"\n    }\n  },\n  {\n    \"title\": \"mcSatisfyRule sample 4\",\n    \"value\": {\n      \"mc\": \"<=1\"\n    }\n  },\n  {\n    \"title\": \"mcSatisfyRule sample 5\",\n    \"value\": {\n      \"mc\": \">=167\"\n    }\n  },\n  {\n    \"title\": \"mcSatisfyRule sample 6\",\n    \"value\": {\n      \"mc\": \">=4\"\n    }\n  },\n  {\n    \"title\": \"mcSatisfyRule sample 7\",\n    \"value\": {\n      \"mc\": \">=3\"\n    }\n  },\n  {\n    \"title\": \"mcSatisfyRule sample 8\",\n    \"value\": {\n      \"mc\": \"<=196\"\n    }\n  },\n  {\n    \"title\": \"mcSatisfyRule sample 9\",\n    \"value\": {\n      \"mc\": \"<=6\"\n    }\n  }\n]",
              "code": "fast_check_1.sample(index_test_2.mcSatisfyRule, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `mcSatisfyRule sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(index_test_2.mcSatisfyRule, ajvValidate));",
              "err": {},
              "uuid": "ae50e749-c661-4c9b-b6ea-9da0fdd0b807",
              "parentUUID": "3757665a-6a2d-4353-93fc-65f9f6193fa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate valid recursive satisfy rules",
              "fullTitle": "satisfyRuleSchema should validate valid recursive satisfy rules",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"satisfyRule sample 0\",\n    \"value\": {\n      \"or\": [\n        {\n          \"or\": [\n            \">H\",\n            \"$J\\\\K?\"\n          ]\n        },\n        {\n          \"and\": [\n            {\n              \"and\": [\n                {\n                  \"and\": [\n                    \"!5Z\",\n                    \"]X4\",\n                    \"4oJ*PM2J8u\",\n                    \"yxn;Kl0zJ\",\n                    \"MbEbBhq\"\n                  ]\n                },\n                {\n                  \"or\": []\n                },\n                \"<gr<}\",\n                {\n                  \"mc\": \"<=85\"\n                }\n              ]\n            },\n            {\n              \"mc\": \"<=120\"\n            },\n            {\n              \"or\": [\n                {\n                  \"and\": [\n                    \"sf4;@\",\n                    {\n                      \"or\": [\n                        \"`s.1i.~t~\"\n                      ]\n                    },\n                    \"^v)az9!\",\n                    \"A-?\",\n                    {\n                      \"or\": [\n                        \"_+*\",\n                        \"<JTe&W-<\",\n                        \">oXX|qL\",\n                        \"U@MvspeKia\"\n                      ]\n                    }\n                  ]\n                }\n              ]\n            },\n            \"&V nR?/\"\n          ]\n        },\n        {\n          \"mc\": \">=119\"\n        },\n        {\n          \"or\": [\n            \"Sna@/3\",\n            \"p9=\",\n            {\n              \"mc\": \"<=75\"\n            },\n            {\n              \"mc\": \"<=25\"\n            },\n            \"\"\n          ]\n        },\n        {\n          \"or\": [\n            \"j/{Pt\\\"Bb\",\n            \"\",\n            \"Ki~\",\n            {\n              \"or\": [\n                \"[!\"\n              ]\n            },\n            \"\"\n          ]\n        }\n      ]\n    }\n  },\n  {\n    \"title\": \"satisfyRule sample 1\",\n    \"value\": {\n      \"or\": [\n        {\n          \"and\": [\n            \"M4#HCjN\",\n            \"oUe^J0d<\",\n            \"\"\n          ]\n        }\n      ]\n    }\n  },\n  {\n    \"title\": \"satisfyRule sample 2\",\n    \"value\": {\n      \"or\": [\n        {\n          \"and\": [\n            {\n              \"or\": [\n                \"R\"\n              ]\n            },\n            {\n              \"or\": []\n            },\n            \"?\",\n            {\n              \"or\": [\n                \" g0Cc\",\n                {\n                  \"and\": []\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"and\": []\n        },\n        \"m7\\\"2\",\n        {\n          \"and\": [\n            {\n              \"and\": [\n                \"p\",\n                \"mD>Ul\",\n                {\n                  \"and\": [\n                    \"L6g2ikyzR,\"\n                  ]\n                }\n              ]\n            },\n            {\n              \"mc\": \"<=183\"\n            }\n          ]\n        },\n        {\n          \"mc\": \"<=108\"\n        }\n      ]\n    }\n  },\n  {\n    \"title\": \"satisfyRule sample 3\",\n    \"value\": \"%|{\"\n  },\n  {\n    \"title\": \"satisfyRule sample 4\",\n    \"value\": \"Q\"\n  },\n  {\n    \"title\": \"satisfyRule sample 5\",\n    \"value\": {\n      \"mc\": \">=6\"\n    }\n  },\n  {\n    \"title\": \"satisfyRule sample 6\",\n    \"value\": \"~??n\"\n  },\n  {\n    \"title\": \"satisfyRule sample 7\",\n    \"value\": {\n      \"and\": []\n    }\n  },\n  {\n    \"title\": \"satisfyRule sample 8\",\n    \"value\": \"CLU\"\n  },\n  {\n    \"title\": \"satisfyRule sample 9\",\n    \"value\": {\n      \"mc\": \">=193\"\n    }\n  }\n]",
              "code": "fast_check_1.sample(index_test_2.satisfyRule, 10).forEach((sample, i) => addContext_1.default(this, {\n    title: `satisfyRule sample ${i}`,\n    value: sample,\n}));\nreturn fast_check_1.assert(fast_check_1.property(index_test_2.satisfyRule, ajvValidate));",
              "err": {},
              "uuid": "7eadeb02-1f81-4cf8-bc87-d385e4b36282",
              "parentUUID": "3757665a-6a2d-4353-93fc-65f9f6193fa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate non-string/object",
              "fullTitle": "satisfyRuleSchema should not validate non-string/object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const error = {\n    instancePath: \"\",\n    message: \"satisfy rule should be either a string or an object\",\n};\nisInvalidRule(null, error);\nisInvalidRule(undefined, error);\nisInvalidRule(10, error);\nisInvalidRule([12, 24], error);",
              "err": {},
              "uuid": "d29b50a6-1c0c-428e-922a-05cb6c97078a",
              "parentUUID": "3757665a-6a2d-4353-93fc-65f9f6193fa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate satisfy rules with extra properties",
              "fullTitle": "satisfyRuleSchema should not validate satisfy rules with extra properties",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isInvalidRule({\n        and: [\n            { or: [\"2k\"], abc: \"def\" },\n            { mc: 8, ghi: \"jkl\" },\n        ],\n        mno: \"pqr\",\n    }, {\n        instancePath: \"/and/0\",\n        message: \"or satisfy rule should have property 'or' only\",\n    }, {\n        instancePath: \"/and/1\",\n        message: \"MC satisfy rule should have property 'mc' only\",\n    }, {\n        instancePath: \"\",\n        message: \"and satisfy rule should have property 'and' only\",\n    })",
              "err": {},
              "uuid": "e93eaebf-6e66-4379-8f7f-eede82f701f9",
              "parentUUID": "3757665a-6a2d-4353-93fc-65f9f6193fa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate ambiguous satisfy rules",
              "fullTitle": "satisfyRuleSchema should not validate ambiguous satisfy rules",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const message = \"satisfy rule should have only one of properties 'mc', 'and', 'or'\";\nisInvalidRule({\n    or: [\n        { mc: 5, and: [\"CS2040\"] },\n        { and: [{ and: [\"abc\"], or: [\"def\"] }] },\n    ],\n}, { instancePath: \"/or/0\", message }, { instancePath: \"/or/1/and/0\", message });",
              "err": {},
              "uuid": "325f6d56-e876-46f7-ac35-cd4554cae8a2",
              "parentUUID": "3757665a-6a2d-4353-93fc-65f9f6193fa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate and satisfy rules with non-array property",
              "fullTitle": "satisfyRuleSchema should not validate and satisfy rules with non-array property",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const message = \"property 'and' should be an array of satisfy rules\";\nisInvalidRule({ or: [{ and: {} }, { or: [{ and: 3 }] }] }, { instancePath: \"/or/0/and\", message }, { instancePath: \"/or/1/or/0/and\", message });",
              "err": {},
              "uuid": "cbd47e7c-07ab-4ea3-b0c4-2a9ed9320ee2",
              "parentUUID": "3757665a-6a2d-4353-93fc-65f9f6193fa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not validate or satisfy rules with non-array property",
              "fullTitle": "satisfyRuleSchema should not validate or satisfy rules with non-array property",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const message = \"property 'or' should be an array of satisfy rules\";\nisInvalidRule({ and: [{ or: {} }, { and: [{ or: 3 }] }] }, { instancePath: \"/and/0/or\", message }, { instancePath: \"/and/1/and/0/or\", message });",
              "err": {},
              "uuid": "dab0dd73-d083-47dd-ae48-64abc471b01a",
              "parentUUID": "3757665a-6a2d-4353-93fc-65f9f6193fa2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a57b59de-7ae2-477b-8486-a6b200c4b9a3",
            "ae50e749-c661-4c9b-b6ea-9da0fdd0b807",
            "7eadeb02-1f81-4cf8-bc87-d385e4b36282",
            "d29b50a6-1c0c-428e-922a-05cb6c97078a",
            "e93eaebf-6e66-4379-8f7f-eede82f701f9",
            "325f6d56-e876-46f7-ac35-cd4554cae8a2",
            "cbd47e7c-07ab-4ea3-b0c4-2a9ed9320ee2",
            "dab0dd73-d083-47dd-ae48-64abc471b01a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.0.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "docs"
      },
      "version": "5.2.0"
    }
  }
}